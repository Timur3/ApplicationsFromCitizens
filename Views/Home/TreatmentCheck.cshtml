@model ApplicationFormViewModel
@{
    ViewBag.Title = Model.Title;
    ViewBag.ErrorMessage = Model.ListError;
    ViewBag.SuccessAction = Model.MessageSuccess;
}

<h2>@ViewBag.Title</h2>
<hr />
<div class="alert alert-dismissable alert-warning">
    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    <strong>Обратите внимание</strong> <br /> Проверьте на корректность Ваши заполненные данные и подтвердите отправку
</div>
<hr />                           
@using (Html.BeginForm("TreatmentCheck", "Home", FormMethod.Post))
{
    <div class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-md-3">Способ получения ответа</label>
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-file" aria-hidden="true"></span></span>
                    @Html.DropDownListFor(model => model.ApplicationForm.GetAnswerListId, Model.GetAnswerList, new { @class = "hidden" })
                    @Html.DropDownListFor(model => model.ApplicationForm.GetAnswerListId, Model.GetAnswerList, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationForm.Email, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-envelope" aria-hidden="true"></span></span>
                    @Html.EditorFor(model => model.ApplicationForm.Email, new { htmlAttributes = new { @type = "hidden" } })
                    @Html.EditorFor(model => model.ApplicationForm.Email, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationForm.FamilyName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-user" aria-hidden="true"></span></span>
                    @Html.EditorFor(model => model.ApplicationForm.FamilyName, new { htmlAttributes = new { @type = "hidden" } })
                    @Html.EditorFor(model => model.ApplicationForm.FamilyName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationForm.Name, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-user" aria-hidden="true"></span></span>
                    @Html.EditorFor(model => model.ApplicationForm.Name, new { htmlAttributes = new { @type = "hidden" } })
                    @Html.EditorFor(model => model.ApplicationForm.Name, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationForm.MiddleName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-user" aria-hidden="true"></span></span>
                    @Html.EditorFor(model => model.ApplicationForm.MiddleName, new { htmlAttributes = new { @type = "hidden" } })
                    @Html.EditorFor(model => model.ApplicationForm.MiddleName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationForm.Mobile, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-phone" aria-hidden="true"></span></span>
                    @Html.EditorFor(model => model.ApplicationForm.Mobile, new { htmlAttributes = new { @type = "hidden" } })
                    @Html.EditorFor(model => model.ApplicationForm.Mobile, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationForm.SocialStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-user" aria-hidden="true"></span></span>
                    @Html.DropDownListFor(model => model.ApplicationForm.SocialStatusId, Model.GetSocialStatusList, new { @class = "hidden" })
                    @Html.DropDownListFor(model => model.ApplicationForm.SocialStatusId, Model.GetSocialStatusList, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                </div>
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationForm.NumberPack, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-tasks" aria-hidden="true"></span></span>
                    @Html.EditorFor(model => model.ApplicationForm.NumberPack, new { htmlAttributes = new { @type = "hidden" } })
                    @Html.EditorFor(model => model.ApplicationForm.NumberPack, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationForm.Message, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                @Html.TextAreaFor(model => model.ApplicationForm.Message, new { @class = "hidden" })
                @Html.DisplayFor(model => model.ApplicationForm.Message, new { @class = "form-control", @rows = 12 })
            </div>
        </div>

        @*<div class="form-group">
            @Html.Label("Прикрепленные файлы", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4">
                <div class="input-group">*@
                    @*@Html.EditorFor(model => model.Treatment.Attachment, new { htmlAttributes = new { @class = "form-control" } })*@
                    @*<span class="input-group-btn">
                        <input type="file" title="Выбрать файл" value="Обзор" class="form-control" />
                    </span>
                </div>
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-3 col-md-9">
                <button type="submit" name="btnSubmit" id="buttonSend" value="SendTreatment" class="btn btn-primary" @*disabled*@>Подтвердить и направить</button>
                <button type="submit" name="btnSubmit" id="buttonEdit" value="EditTreatment" class="btn btn-primary" @*disabled*@>Редактировать</button>
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-12 text-center">
                <label>
                    Возникли вопросы, пишите: <a href="mailto:asu@mp-ges.ru">asu@mp-ges.ru</a>
                </label>
            </div>
        </div>
    </div>
}
